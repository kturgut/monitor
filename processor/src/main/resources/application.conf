# The runtime.environment configuration is supposed to be set via command line, using -Druntime.environment=my-env
# The entry below should not be uncommented unless you want to make a certain environment the default environment.
# runtime.environment=kafka-heartbeat-processor-longevity
# runtime.environment=kafka-heartbeat-processor-analytics-iad4-k8s


kafka-heartbeat-processor {
  bootstrap-servers = "localhost:9992"
  topics = ["heartbeat-events"]
  group = "monitor-heartbeat-processing"
  ask-timeout = 10s
  stop-timeout = 0s
  cluster-sharding-timeout = 10s
  attempts = 5
  delay-between-attempts = 1s
}

kafka-heartbeat-processor-local {
     kafka-heartbeat-processor {
          bootstrap-servers = "localhost:9992"
          topics = ["heartbeat-events"]
          group = "monitor-heartbeat-processing"
          ask-timeout = 10s
          stop-timeout = 0s
          cluster-sharding-timeout = 10s
          attempts = 5
          delay-between-attempts = 1s
    }
}

kafka-heartbeat-processor-longevity {
    kafka-heartbeat-processor {
      bootstrap-servers = "10.6.4.50:30201" // iad4 cluster
      topics = ["rawlogs"]
      group = "monitor-heartbeat-processing"
      ask-timeout = 30s // 10s
      stop-timeout = 180s //  0s
      cluster-sharding-timeout = 15s // 10s
      attempts = 5
      delay-between-attempts = 1s
    }
}


kafka-heartbeat-processor-analytics-iad4-k8s {
    kafka-heartbeat-processor {
      bootstrap-servers = "kafka-kafka-0.kafka-kafka-brokers.tlb-kafka.svc:9092" // iad4 analytics cluster
      topics = ["rawlogs-analytics"]
      group = "monitor-heartbeat-processing"
      ask-timeout = 30s // 10s
      stop-timeout = 180s //  0s
      cluster-sharding-timeout = 15s // 10s
      attempts = 5
      delay-between-attempts = 1s
    }
}

akka.http {
  server.preview.enable-http2 = on
}

akka {
  actor {
    provider = "cluster"

    debug.receive = true

    serialization-bindings {
      "com.brane.monitor.processor.heartbeat.CborSerializable" = jackson-cbor
    }
  }

    kafka.consumer {
      poll-interval = 300ms
    }

    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
    }
  }

  cluster {
    seed-nodes = [
      "akka://Monitor@127.0.0.1:2751"
      "akka://Monitor@127.0.0.1:2752"
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    sharding {
      retry-interval = 200ms
      waiting-for-state-timeout = 200ms
    }
  }
}

akka.management {
  http {
    hostname = "127.0.0.1"
    port = 8858
  }
}
